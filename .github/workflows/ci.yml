name: CI/CD

env:
  PACKAGE_MANAGER: bun
  VERSION_FILE: packages/nuxt/package.json
  MAIN_BRANCH: main
  DEV_BRANCH: dev

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  id-token: write

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src
              - 'packages/**/*.{ts,vue}'
              - 'packages/**/package.json'
              - 'packages/**/*.lockb'
              - 'package.json'
              - '*.lockb'

  build-and-test:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.src == 'true'
    outputs:
      version_changed: ${{ steps.version_check.outputs.has_changed }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup ${{ env.PACKAGE_MANAGER }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: üì¶ Install Dependencies
        run: ${{ env.PACKAGE_MANAGER }} install

      - name: üöÄ Project Setup
        run: ${{ env.PACKAGE_MANAGER }} run dev:prepare

      - name: üß™ Lint and Build
        run: |
          ${{ env.PACKAGE_MANAGER }} run lint
          ${{ env.PACKAGE_MANAGER }} run build

      - name: üîç Check Version Changes
        uses: HugoRCD/version-diff-action@v1.0.1
        id: version_check
        with:
          path: ${{ env.VERSION_FILE }}

  deploy:
    needs: build-and-test
    strategy:
      matrix:
        include:
          - name: main
            script: release.sh
            branch: ${{ env.MAIN_BRANCH }}
          - name: ui
            script: release-ui.sh
            branch: ${{ env.MAIN_BRANCH }}
          - name: edge
            script: release-edge.sh
            branch: ${{ env.DEV_BRANCH }}
    if: |
      needs.build-and-test.outputs.version_changed == 'true' &&
      github.ref == format('refs/heads/{0}', matrix.branch)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup ${{ env.PACKAGE_MANAGER }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: üöÄ Deploy ${{ matrix.name }}
        run: ./scripts/${{ matrix.script }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
