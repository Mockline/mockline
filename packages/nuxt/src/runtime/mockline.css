/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --blur-sm: 8px;
    --blur-lg: 16px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .inset-y-2 {
    inset-block: calc(var(--spacing) * 2);
  }
  .-top-2\.5 {
    top: calc(var(--spacing) * -2.5);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-15 {
    top: calc(var(--spacing) * 15);
  }
  .top-\[11px\] {
    top: 11px;
  }
  .top-\[var\(--header-height\)\] {
    top: var(--header-height);
  }
  .top-full {
    top: 100%;
  }
  .-right-2\.5 {
    right: calc(var(--spacing) * -2.5);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-\[11px\] {
    right: 11px;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .isolate {
    isolation: isolate;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[9999\] {
    z-index: 9999;
  }
  .row-span-3 {
    grid-row: span 3 / span 3;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1\.5 {
    margin-block: calc(var(--spacing) * 1.5);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-auto {
    margin-inline-start: auto;
  }
  .-me-0\.5 {
    margin-inline-end: calc(var(--spacing) * -0.5);
  }
  .-me-1\.5 {
    margin-inline-end: calc(var(--spacing) * -1.5);
  }
  .-me-2 {
    margin-inline-end: calc(var(--spacing) * -2);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-\[10px\] {
    margin-top: 10px;
  }
  .mr-1\.5 {
    margin-right: calc(var(--spacing) * 1.5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-\[7px\] {
    margin-bottom: 7px;
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-auto {
    margin-left: auto;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-4\.5 {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-10\/12 {
    width: calc(10/12 * 100%);
    height: calc(10/12 * 100%);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-\[4px\] {
    height: 4px;
  }
  .h-\[100vh\] {
    height: 100vh;
  }
  .h-\[calc\(100vh-var\(--spacing\)\*2\)\] {
    height: calc(100vh - var(--spacing) * 2);
  }
  .h-\[var\(--header-height\)\] {
    height: var(--header-height);
  }
  .h-\[var\(--reka-navigation-menu-viewport-height\)\] {
    height: var(--reka-navigation-menu-viewport-height);
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .h-screen {
    height: 100vh;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-\[var\(--reka-tabs-indicator-size\)\] {
    width: var(--reka-tabs-indicator-size);
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .origin-\[top_center\] {
    transform-origin: top center;
  }
  .origin-right {
    transform-origin: right;
  }
  .origin-top-left {
    transform-origin: top left;
  }
  .translate-x-\[var\(--reka-tabs-indicator-position\)\] {
    --tw-translate-x: var(--reka-tabs-indicator-position);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-50 {
    --tw-scale-x: 50%;
    --tw-scale-y: 50%;
    --tw-scale-z: 50%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-\[0\.9\] {
    scale: 0.9;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-zoom-in {
    cursor: zoom-in;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .scroll-mt-\[calc\(var\(--header-height\)\)\] {
    scroll-margin-top: calc(var(--header-height));
  }
  .scroll-mt-\[calc\(var\(--header-height\)\*1\.5\)\] {
    scroll-margin-top: calc(var(--header-height) * 1.5);
  }
  .scroll-mt-\[var\(--ui-header-height\)\] {
    scroll-margin-top: var(--ui-header-height);
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .list-none {
    list-style-type: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-\[2px\] {
    gap: 2px;
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-\[10px\] {
    column-gap: 10px;
  }
  .-space-x-\[var\(--overlap\)\] {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--overlap) * -1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--overlap) * -1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-\[10px\] {
    row-gap: 10px;
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-\(--color-border-primary\) {
    :where(& > :not(:last-child)) {
      border-color: var(--color-border-primary);
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\(--base-radius\) {
    border-radius: var(--base-radius);
  }
  .rounded-\[4px\] {
    border-radius: 4px;
  }
  .rounded-\[6px\] {
    border-radius: 6px;
  }
  .rounded-\[10px\] {
    border-radius: 10px;
  }
  .rounded-\[calc\(var\(--radius-base\)\*0\.75\)\] {
    border-radius: calc(var(--radius-base) * 0.75);
  }
  .rounded-\[calc\(var\(--radius-base\)\*1\.5\)\] {
    border-radius: calc(var(--radius-base) * 1.5);
  }
  .rounded-\[calc\(var\(--radius-base\)\*1\.25\)\] {
    border-radius: calc(var(--radius-base) * 1.25);
  }
  .rounded-\[calc\(var\(--radius-base\)\*2\)\] {
    border-radius: calc(var(--radius-base) * 2);
  }
  .rounded-\[inherit\] {
    border-radius: inherit;
  }
  .rounded-\[var\(--radius-base\)\] {
    border-radius: var(--radius-base);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-\[0\.3px\] {
    border-style: var(--tw-border-style);
    border-width: 0.3px;
  }
  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .border-s-\[2px\] {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 2px;
  }
  .border-s-\[3px\] {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 3px;
  }
  .border-s-\[4px\] {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 4px;
  }
  .border-s-\[5px\] {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 5px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-\[2px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-t-\[3px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 3px;
  }
  .border-t-\[4px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-t-\[5px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 5px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-\(--color-bg-quaternary\) {
    border-color: var(--color-bg-quaternary);
  }
  .border-\(--color-bg-quinary\) {
    border-color: var(--color-bg-quinary);
  }
  .border-\(--color-border-primary\) {
    border-color: var(--color-border-primary);
  }
  .border-\[var\(\&\#45\;\&\#45\;ui-border\)\] {
    border-color: var(&#45;&#45;ui-border);
  }
  .border-\[var\(--color-border-primary\)\] {
    border-color: var(--color-border-primary);
  }
  .border-\[var\(--color-border-secondary\)\] {
    border-color: var(--color-border-secondary);
  }
  .border-\[var\(--color-border-secondary\)\]\/70 {
    border-color: var(--color-border-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-border-secondary) 70%, transparent);
    }
  }
  .border-\[var\(--color-border-tertiary\)\]\/50 {
    border-color: var(--color-border-tertiary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-border-tertiary) 50%, transparent);
    }
  }
  .border-\[var\(--color-text-secondary\)\]\/40 {
    border-color: var(--color-text-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-text-secondary) 40%, transparent);
    }
  }
  .border-\[var\(--ui-border\)\] {
    border-color: var(--ui-border);
  }
  .border-\[var\(--ui-border\)\]\/20 {
    border-color: var(--ui-border);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--ui-border) 20%, transparent);
    }
  }
  .border-\[var\(--ui-border\)\]\/30 {
    border-color: var(--ui-border);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--ui-border) 30%, transparent);
    }
  }
  .border-blue-500\/30 {
    border-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
    }
  }
  .border-green-500\/30 {
    border-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-green-500) 30%, transparent);
    }
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-red-500\/30 {
    border-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-yellow-500\/30 {
    border-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-yellow-500) 30%, transparent);
    }
  }
  .bg-\(--color-bg-secondary\) {
    background-color: var(--color-bg-secondary);
  }
  .bg-\(--color-bg-tertiary\) {
    background-color: var(--color-bg-tertiary);
  }
  .bg-\(--color-danger\)\/10 {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
  }
  .bg-\[var\(--color-accent\)\] {
    background-color: var(--color-accent);
  }
  .bg-\[var\(--color-accent\)\]\/10 {
    background-color: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-accent) 10%, transparent);
    }
  }
  .bg-\[var\(--color-bg-level-1\)\] {
    background-color: var(--color-bg-level-1);
  }
  .bg-\[var\(--color-bg-level-2\)\] {
    background-color: var(--color-bg-level-2);
  }
  .bg-\[var\(--color-bg-primary\)\] {
    background-color: var(--color-bg-primary);
  }
  .bg-\[var\(--color-bg-quaternary\)\] {
    background-color: var(--color-bg-quaternary);
  }
  .bg-\[var\(--color-bg-quaternary\)\]\/60 {
    background-color: var(--color-bg-quaternary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-bg-quaternary) 60%, transparent);
    }
  }
  .bg-\[var\(--color-bg-translucent\)\] {
    background-color: var(--color-bg-translucent);
  }
  .bg-\[var\(--color-danger\)\] {
    background-color: var(--color-danger);
  }
  .bg-\[var\(--color-danger\)\]\/10 {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
  }
  .bg-\[var\(--color-fg-primary\)\] {
    background-color: var(--color-fg-primary);
  }
  .bg-\[var\(--content-area-bg\)\] {
    background-color: var(--content-area-bg);
  }
  .bg-\[var\(--ui-bg\)\]\/80 {
    background-color: var(--ui-bg);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--ui-bg) 80%, transparent);
    }
  }
  .bg-\[var\(--ui-bg-elevated\)\]\/90 {
    background-color: var(--ui-bg-elevated);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--ui-bg-elevated) 90%, transparent);
    }
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/10 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
    }
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-500\/10 {
    background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
    }
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/10 {
    background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-yellow-500\/10 {
    background-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-\[var\(--color-border-primary\)\] {
    --tw-gradient-via: var(--color-border-primary);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-\[22px\] {
    padding: 22px;
  }
  .p-\[25px\] {
    padding: 25px;
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }
  .ps-1\.5 {
    padding-inline-start: calc(var(--spacing) * 1.5);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pr-1 {
    padding-right: calc(var(--spacing) * 1);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .text-center {
    text-align: center;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-sub {
    vertical-align: sub;
  }
  .align-top {
    vertical-align: top;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-xs\/4 {
    font-size: var(--text-xs);
    line-height: calc(var(--spacing) * 4);
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[15px\] {
    font-size: 15px;
  }
  .text-\[18px\] {
    font-size: 18px;
  }
  .leading-7 {
    --tw-leading: calc(var(--spacing) * 7);
    line-height: calc(var(--spacing) * 7);
  }
  .leading-\[1\.2\] {
    --tw-leading: 1.2;
    line-height: 1.2;
  }
  .leading-\[1\.3\] {
    --tw-leading: 1.3;
    line-height: 1.3;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .text-\(--color-accent\) {
    color: var(--color-accent);
  }
  .text-\(--color-danger\) {
    color: var(--color-danger);
  }
  .text-\(--color-text-secondary\) {
    color: var(--color-text-secondary);
  }
  .text-\(--color-text-tertiary\) {
    color: var(--color-text-tertiary);
  }
  .text-\[var\(--color-accent\)\] {
    color: var(--color-accent);
  }
  .text-\[var\(--color-danger\)\] {
    color: var(--color-danger);
  }
  .text-\[var\(--color-fg-primary\)\] {
    color: var(--color-fg-primary);
  }
  .text-\[var\(--color-fg-secondary\)\] {
    color: var(--color-fg-secondary);
  }
  .text-\[var\(--color-text-primary\)\] {
    color: var(--color-text-primary);
  }
  .text-\[var\(--color-text-quaternary\)\] {
    color: var(--color-text-quaternary);
  }
  .text-\[var\(--color-text-secondary\)\] {
    color: var(--color-text-secondary);
  }
  .text-\[var\(--color-text-tertiary\)\] {
    color: var(--color-text-tertiary);
  }
  .text-\[var\(--ui-primary\)\] {
    color: var(--ui-primary);
  }
  .text-\[var\(--ui-text-secondary\)\] {
    color: var(--ui-text-secondary);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-600 {
    color: var(--color-yellow-600);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-3 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-\[2px\] {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-\[var\(--color-accent\)\]\/25 {
    --tw-ring-color: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-accent) 25%, transparent);
    }
  }
  .ring-\[var\(--color-border-primary\)\] {
    --tw-ring-color: var(--color-border-primary);
  }
  .ring-\[var\(--color-danger\)\]\/25 {
    --tw-ring-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-danger) 25%, transparent);
    }
  }
  .ring-\[var\(--color-fg-primary\)\]\/15 {
    --tw-ring-color: var(--color-fg-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-fg-primary) 15%, transparent);
    }
  }
  .ring-\[var\(--content-area-bg\)\] {
    --tw-ring-color: var(--content-area-bg);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\,opacity\] {
    transition-property: color,opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[translate\,width\] {
    transition-property: translate,width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\,_height\] {
    transition-property: width, height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .perspective-\[2000px\] {
    perspective: 2000px;
  }
  .\*\:not-last\:pb-5 {
    :is(& > *) {
      &:not(*:last-child) {
        padding-bottom: calc(var(--spacing) * 5);
      }
    }
  }
  .not-\[\.code-group_\&\]\:rounded-none {
    &:not(.code-group *) {
      border-radius: 0;
    }
  }
  .not-\[\.code-group_\&\]\:border {
    &:not(.code-group *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .not-\[\.code-group_\&\]\:border-none {
    &:not(.code-group *) {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .not-\[\.code-group_\&\]\:border-\[var\(--color-border-primary\)\] {
    &:not(.code-group *) {
      border-color: var(--color-border-primary);
    }
  }
  .not-\[\.code-group_\&\]\:bg-\[var\(--color-bg-primary\)\] {
    &:not(.code-group *) {
      background-color: var(--color-bg-primary);
    }
  }
  .not-\[\.code-group_\&\]\:bg-transparent {
    &:not(.code-group *) {
      background-color: transparent;
    }
  }
  .not-\[\.code-group_\&\]\:p-0 {
    &:not(.code-group *) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .not-\[\.code-group_\&\]\:p-2 {
    &:not(.code-group *) {
      padding: calc(var(--spacing) * 2);
    }
  }
  .group-hover\:border-\[var\(--color-border-tertiary\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-border-tertiary);
      }
    }
  }
  .group-hover\:bg-\[var\(--color-bg-level-3\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-bg-level-3);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-data-\[state\=checked\]\:text-\[var\(--color-text-primary\)\] {
    &:is(:where(.group)[data-state="checked"] *) {
      color: var(--color-text-primary);
    }
  }
  .group-data-\[state\=checked\]\:opacity-100 {
    &:is(:where(.group)[data-state="checked"] *) {
      opacity: 100%;
    }
  }
  .group-data-\[state\=unchecked\]\:text-\[var\(--color-bg-quaternary\)\] {
    &:is(:where(.group)[data-state="unchecked"] *) {
      color: var(--color-bg-quaternary);
    }
  }
  .group-data-\[state\=unchecked\]\:opacity-100 {
    &:is(:where(.group)[data-state="unchecked"] *) {
      opacity: 100%;
    }
  }
  .marker\:text-\[var\(--ui-border-accented\)\] {
    & *::marker {
      color: var(--ui-border-accented);
    }
    &::marker {
      color: var(--ui-border-accented);
    }
    & *::-webkit-details-marker {
      color: var(--ui-border-accented);
    }
    &::-webkit-details-marker {
      color: var(--ui-border-accented);
    }
  }
  .after\:ms-0\.5 {
    &::after {
      content: var(--tw-content);
      margin-inline-start: calc(var(--spacing) * 0.5);
    }
  }
  .after\:text-\[var\(--ui-danger\)\] {
    &::after {
      content: var(--tw-content);
      color: var(--ui-danger);
    }
  }
  .after\:content-\[\\\'\*\\\'\] {
    &::after {
      content: var(--tw-content);
      --tw-content: \'*\';
      content: var(--tw-content);
    }
  }
  .first\:me-0 {
    &:first-child {
      margin-inline-end: calc(var(--spacing) * 0);
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:border-\[var\(--color-border-tertiary\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-border-tertiary);
      }
    }
  }
  .hover\:bg-\[var\(--color-accent\)\]\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-accent) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[var\(--color-accent\)\]\/15 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-accent) 15%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[var\(--color-accent-hover\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent-hover);
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-level-3\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-level-3);
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-quaternary\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-quaternary);
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-translucent\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-translucent);
      }
    }
  }
  .hover\:bg-\[var\(--color-danger\)\]\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[var\(--color-danger\)\]\/15 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-danger) 15%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[var\(--color-danger-hover\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger-hover);
      }
    }
  }
  .hover\:bg-\[var\(--color-fg-primary\)\]\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fg-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-fg-primary) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[var\(--ui-bg-accented\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--ui-bg-accented);
      }
    }
  }
  .hover\:bg-yellow-500\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
        }
      }
    }
  }
  .hover\:text-\(--color-text-primary\) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-text-primary);
      }
    }
  }
  .hover\:text-\[var\(--color-text-primary\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--color-text-primary);
      }
    }
  }
  .hover\:text-\[var\(--ui-text-primary\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--ui-text-primary);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:underline-offset-4 {
    &:hover {
      @media (hover: hover) {
        text-underline-offset: 4px;
      }
    }
  }
  .focus\:shadow-\[0_0_0_2px\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[var\(--ui-bg-inverted\)\] {
    &:focus {
      --tw-shadow: var(--ui-bg-inverted);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-\[var\(--color-accent\)\] {
    &:focus-visible {
      --tw-ring-color: var(--color-accent);
    }
  }
  .focus-visible\:ring-\[var\(--color-accent\)\]\/50 {
    &:focus-visible {
      --tw-ring-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
      }
    }
  }
  .focus-visible\:ring-\[var\(--color-danger\)\] {
    &:focus-visible {
      --tw-ring-color: var(--color-danger);
    }
  }
  .focus-visible\:ring-\[var\(--color-danger\)\]\/50 {
    &:focus-visible {
      --tw-ring-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-danger) 50%, transparent);
      }
    }
  }
  .focus-visible\:ring-\[var\(--color-fg-primary\)\] {
    &:focus-visible {
      --tw-ring-color: var(--color-fg-primary);
    }
  }
  .focus-visible\:ring-\[var\(--color-fg-primary\)\]\/50 {
    &:focus-visible {
      --tw-ring-color: var(--color-fg-primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-fg-primary) 50%, transparent);
      }
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:outline-2 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus-visible\:outline-offset-2 {
    &:focus-visible {
      outline-offset: 2px;
    }
  }
  .focus-visible\:outline-\(--color-accent\) {
    &:focus-visible {
      outline-color: var(--color-accent);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-inset {
    &:focus-visible {
      --tw-ring-inset: inset;
    }
  }
  .active\:translate-y-px {
    &:active {
      --tw-translate-y: 1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .active\:bg-\[var\(--color-accent\)\]\/15 {
    &:active {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 15%, transparent);
      }
    }
  }
  .active\:bg-\[var\(--color-bg-quaternary\)\] {
    &:active {
      background-color: var(--color-bg-quaternary);
    }
  }
  .active\:bg-\[var\(--color-danger\)\]\/15 {
    &:active {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 15%, transparent);
      }
    }
  }
  .active\:text-\[var\(--color-accent-hover\)\] {
    &:active {
      color: var(--color-accent-hover);
    }
  }
  .active\:text-\[var\(--color-danger-hover\)\] {
    &:active {
      color: var(--color-danger-hover);
    }
  }
  .active\:text-\[var\(--color-fg-primary\)\] {
    &:active {
      color: var(--color-fg-primary);
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:bg-\[var\(--color-accent\)\]\/5 {
    &:disabled {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 5%, transparent);
      }
    }
  }
  .disabled\:bg-\[var\(--color-accent\)\]\/75 {
    &:disabled {
      background-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-accent) 75%, transparent);
      }
    }
  }
  .disabled\:bg-\[var\(--color-bg-translucent\)\] {
    &:disabled {
      background-color: var(--color-bg-translucent);
    }
  }
  .disabled\:bg-\[var\(--color-bg-translucent\)\]\/75 {
    &:disabled {
      background-color: var(--color-bg-translucent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-bg-translucent) 75%, transparent);
      }
    }
  }
  .disabled\:bg-\[var\(--color-danger\)\]\/5 {
    &:disabled {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 5%, transparent);
      }
    }
  }
  .disabled\:bg-\[var\(--color-danger\)\]\/75 {
    &:disabled {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 75%, transparent);
      }
    }
  }
  .disabled\:no-underline {
    &:disabled {
      text-decoration-line: none;
    }
  }
  .disabled\:opacity-75 {
    &:disabled {
      opacity: 75%;
    }
  }
  .disabled\:ring-\[var\(--color-accent\)\]\/15 {
    &:disabled {
      --tw-ring-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-accent) 15%, transparent);
      }
    }
  }
  .disabled\:ring-\[var\(--color-danger\)\]\/15 {
    &:disabled {
      --tw-ring-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-danger) 15%, transparent);
      }
    }
  }
  .disabled\:ring-\[var\(--color-fg-primary\)\]\/15 {
    &:disabled {
      --tw-ring-color: var(--color-fg-primary);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-fg-primary) 15%, transparent);
      }
    }
  }
  .disabled\:hover\:bg-transparent {
    &:disabled {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
  }
  .data-\[active\=true\]\:bg-\[var\(--color-bg-translucent\)\] {
    &[data-active="true"] {
      background-color: var(--color-bg-translucent);
    }
  }
  .data-\[active\=true\]\:font-bold {
    &[data-active="true"] {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .data-\[active\=true\]\:font-semibold {
    &[data-active="true"] {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .data-\[active\=true\]\:text-\[var\(--color-text-primary\)\] {
    &[data-active="true"] {
      color: var(--color-text-primary);
    }
  }
  .data-\[disabled\=true\]\:cursor-not-allowed {
    &[data-disabled="true"] {
      cursor: not-allowed;
    }
  }
  .data-\[disabled\=true\]\:opacity-50 {
    &[data-disabled="true"] {
      opacity: 50%;
    }
  }
  .data-\[motion\=from-end\]\:animate-\[enter-from-right_200ms_ease\] {
    &[data-motion="from-end"] {
      animation: enter-from-right 200ms ease;
    }
  }
  .data-\[motion\=from-start\]\:animate-\[enter-from-left_200ms_ease\] {
    &[data-motion="from-start"] {
      animation: enter-from-left 200ms ease;
    }
  }
  .data-\[motion\=to-end\]\:animate-\[exit-to-right_200ms_ease\] {
    &[data-motion="to-end"] {
      animation: exit-to-right 200ms ease;
    }
  }
  .data-\[motion\=to-start\]\:animate-\[exit-to-left_200ms_ease\] {
    &[data-motion="to-start"] {
      animation: exit-to-left 200ms ease;
    }
  }
  .data-\[state\=checked\]\:translate-x-3 {
    &[data-state="checked"] {
      --tw-translate-x: calc(var(--spacing) * 3);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:translate-x-3\.5 {
    &[data-state="checked"] {
      --tw-translate-x: calc(var(--spacing) * 3.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:translate-x-4 {
    &[data-state="checked"] {
      --tw-translate-x: calc(var(--spacing) * 4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:translate-x-4\.5 {
    &[data-state="checked"] {
      --tw-translate-x: calc(var(--spacing) * 4.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:translate-x-5 {
    &[data-state="checked"] {
      --tw-translate-x: calc(var(--spacing) * 5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:bg-\[var\(--color-fg-primary\)\] {
    &[data-state="checked"] {
      background-color: var(--color-fg-primary);
    }
  }
  .data-\[state\=closed\]\:animate-\[scale-out_200ms_ease\] {
    &[data-state="closed"] {
      animation: scale-out 200ms ease;
    }
  }
  .data-\[state\=open\]\:animate-\[scale-in_200ms_ease\] {
    &[data-state="open"] {
      animation: scale-in 200ms ease;
    }
  }
  .data-\[state\=unchecked\]\:translate-x-0 {
    &[data-state="unchecked"] {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=unchecked\]\:bg-\[var\(--color-bg-quaternary\)\] {
    &[data-state="unchecked"] {
      background-color: var(--color-bg-quaternary);
    }
  }
  .max-sm\:hidden {
    @media (width < 40rem) {
      display: none;
    }
  }
  .sm\:right-6 {
    @media (width >= 40rem) {
      right: calc(var(--spacing) * 6);
    }
  }
  .sm\:w-\[500px\] {
    @media (width >= 40rem) {
      width: 500px;
    }
  }
  .sm\:w-\[var\(--reka-navigation-menu-viewport-width\)\] {
    @media (width >= 40rem) {
      width: var(--reka-navigation-menu-viewport-width);
    }
  }
  .sm\:w-auto {
    @media (width >= 40rem) {
      width: auto;
    }
  }
  .sm\:scale-\[0\.6\] {
    @media (width >= 40rem) {
      scale: 0.6;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-\[0\.75fr_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: 0.75fr 1fr;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .lg\:top-3 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 3);
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .data-\[state\=checked\]\:rtl\:-translate-x-3 {
    &[data-state="checked"] {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(var(--spacing) * -3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[state\=checked\]\:rtl\:-translate-x-3\.5 {
    &[data-state="checked"] {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(var(--spacing) * -3.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[state\=checked\]\:rtl\:-translate-x-4 {
    &[data-state="checked"] {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(var(--spacing) * -4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[state\=checked\]\:rtl\:-translate-x-4\.5 {
    &[data-state="checked"] {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(var(--spacing) * -4.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[state\=checked\]\:rtl\:-translate-x-5 {
    &[data-state="checked"] {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(var(--spacing) * -5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[state\=unchecked\]\:rtl\:-translate-x-0 {
    &[data-state="unchecked"] {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(var(--spacing) * -0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .dark\:border-blue-500\/20 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
      }
    }
  }
  .dark\:border-green-500\/20 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
      }
    }
  }
  .dark\:border-neutral-700 {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-red-500\/20 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
      }
    }
  }
  .dark\:border-yellow-500\/20 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
      }
    }
  }
  .dark\:bg-blue-800\/5 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(42.4% 0.199 265.638) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-800) 5%, transparent);
      }
    }
  }
  .dark\:bg-green-800\/5 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(44.8% 0.119 151.328) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-green-800) 5%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-neutral-900 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:bg-neutral-900\/70 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 70%, transparent);
      }
    }
  }
  .dark\:bg-red-800\/5 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(44.4% 0.177 26.899) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-red-800) 5%, transparent);
      }
    }
  }
  .dark\:bg-yellow-800\/5 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(47.6% 0.114 61.907) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-yellow-800) 5%, transparent);
      }
    }
  }
  .dark\:text-gray-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-neutral-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:hover\:text-\[var\(--ui-text-primary-dark\)\] {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          color: var(--ui-text-primary-dark);
        }
      }
    }
  }
  .\[\&_code\]\:text-xs\/4 {
    & code {
      font-size: var(--text-xs);
      line-height: calc(var(--spacing) * 4);
    }
  }
  .\[\&\>a\]\:focus-visible\:outline-\[var\(--ui-primary\)\] {
    &>a {
      &:focus-visible {
        outline-color: var(--ui-primary);
      }
    }
  }
  .\[\&\>a\>code\]\:border-dashed {
    &>a>code {
      --tw-border-style: dashed;
      border-style: dashed;
    }
  }
  .\[\&\>a\>code\]\:text-lg\/6 {
    &>a>code {
      font-size: var(--text-lg);
      line-height: calc(var(--spacing) * 6);
    }
  }
  .\[\&\>a\>code\]\:text-xl\/7 {
    &>a>code {
      font-size: var(--text-xl);
      line-height: calc(var(--spacing) * 7);
    }
  }
  .\[\&\>a\>code\]\:font-bold {
    &>a>code {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .hover\:\[\&\>a\>code\]\:border-\[var\(--ui-primary\)\] {
    &:hover {
      @media (hover: hover) {
        &>a>code {
          border-color: var(--ui-primary);
        }
      }
    }
  }
  .hover\:\[\&\>a\>code\]\:text-\[var\(--ui-primary\)\] {
    &:hover {
      @media (hover: hover) {
        &>a>code {
          color: var(--ui-primary);
        }
      }
    }
  }
  .\[\&\>code\]\:border-dashed {
    &>code {
      --tw-border-style: dashed;
      border-style: dashed;
    }
  }
  .\[\&\>div\:not\(\:first-child\)\]\:\!static {
    &>div:not(:first-child) {
      position: static !important;
    }
  }
  .\[\&\>div\:not\(\:first-child\)\]\:\!my-0 {
    &>div:not(:first-child) {
      margin-block: calc(var(--spacing) * 0) !important;
    }
  }
  .\[\&\>pre\]\:my-0 {
    &>pre {
      margin-block: calc(var(--spacing) * 0);
    }
  }
  .\[\&\>ul\]\:my-0 {
    &>ul {
      margin-block: calc(var(--spacing) * 0);
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
